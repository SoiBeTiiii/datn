"use client";

import styles from "./Cart.module.css";
import CartItem from "../components/CartItem";
import { useEffect, useState } from "react";
import { useCart } from "../context/CartConText";
import { useRouter } from "next/navigation";

export default function CartPage() {
  const { cart } = useCart();
  const { increaseQuantity, decreaseQuantity, removeFromCart } = useCart();
  const router = useRouter();
  const [note, setNote] = useState("");
  const [invoice, setInvoice] = useState(false);

  // T√°ch s·∫£n ph·∫©m v√† qu√† t·∫∑ng
  const products = cart.filter((item) => !item.isGift);
  const gifts = cart.filter((item) => item.isGift);

  const handleCheckout = () => {
    localStorage.setItem("checkout_note", note);
    localStorage.setItem("checkout_invoice", JSON.stringify(invoice));
    router.push("/checkout");
  };

  const subtotal = products.reduce(
    (sum, item) => sum + item.price * item.quantity,
    0
  );

  const originalTotal = products.reduce(
    (sum, item) =>
      sum + (item.originalPrice ?? item.price) * item.quantity,
    0
  );

  const discount = originalTotal - subtotal;
  const total = subtotal;

  return (
    <div className={styles.container}>
      <div className={styles.left}>
        <div className={styles.banner}>
          <div>
            ƒê∆°n h√†ng 99k Son <strong>ƒê∆∞·ª£c Kh·∫Øc Son Mi·ªÖn Ph√≠</strong>
          </div>
          <div>
            ƒê∆°n h√†ng Tr√™n 99k <strong>Freeship N·ªôi Th√†nh</strong>
          </div>
          <div>
            <strong>H·ªó tr·ª£ ƒë·ªïi tr·∫£ trong 7 ng√†y</strong>
          </div>
        </div>

        <div className={styles.titlebox}>
          <h2>Gi·ªè h√†ng:</h2>
          <hr className={styles.divider} />

          {products.length === 0 ? (
            <p>Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>
          ) : (
            <>
              {products.map((item, index) => (
                <CartItem
                  key={`product-${item.variantId}-${index}`}
                  product={item}
                />
              ))}

              {gifts.length > 0 && (
                <>
                  <h4 className={styles.giftTitle}>üéÅ Qu√† t·∫∑ng k√®m:</h4>
                  {gifts.map((gift, index) => (
                    <CartItem
                      key={`gift-${gift.variantId}-${index}`}
                      product={gift}
                    />
                  ))}
                </>
              )}
            </>
          )}
        </div>
      </div>

      <div className={styles.right}>
        <h3>Th√¥ng tin ƒë∆°n h√†ng</h3>

        <div className={styles.summary}>
          <div>
            <span>T·∫°m t√≠nh:</span>
            <strong>{subtotal.toLocaleString()}‚Ç´</strong>
          </div>

          <div>
            <span>Gi·∫£m gi√°:</span>
            <strong>{discount > 0 ? `- ${discount.toLocaleString()}‚Ç´` : "0‚Ç´"}</strong>
          </div>

          <div>
            <span>T·ªïng c·ªông:</span>
            <strong className={styles.total}>{total.toLocaleString()}‚Ç´</strong>
          </div>
        </div>

        <label className={styles.checkbox}>
          <input
            type="checkbox"
            checked={invoice}
            onChange={(e) => setInvoice(e.target.checked)}
          />
          Th√¥ng tin xu·∫•t ho√° ƒë∆°n
        </label>

        <button className={styles.checkout} onClick={handleCheckout}>
          THANH TO√ÅN NGAY
        </button>

        <div className={styles.back}>‚Ü© Ti·∫øp t·ª•c mua h√†ng</div>
      </div>
    </div>
  );
}
